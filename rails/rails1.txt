rubys> cd work
work> rails new demo  #new app name
work> cd demo 		  #root dir of app


demo> ls -p			#rails directory structure
app/ config.ru doc/ Gemfile.lock log/ Rakefile script/ tmp/ config/ db/ Gemfile lib/ public/ README test/ vendor/

demo> rake about 	#Shows rails version and details about ruby
#Output

About your application's environment
Ruby version              2.0.0 (x86_64-darwin11.4.2)
RubyGems version          2.0.0
Rack version              1.5
Rails version             4.0.0
JavaScript Runtime        JavaScriptCore
Active Record version     4.0.0
Action Pack version       4.0.0
Action Mailer version     4.0.0
Active Support version    4.0.0
Middleware                ActionDispatch::Static, Rack::Lock, #<ActiveSupport::Cache::Strategy::LocalCache::Middleware:0x007fb501b03390>, Rack::Runtime, Rack::MethodOverride, ActionDispatch::RequestId, Rails::Rack::Logger, ActionDispatch::ShowExceptions, ActionDispatch::DebugExceptions, ActionDispatch::RemoteIp, ActionDispatch::Reloader, ActionDispatch::Callbacks, ActiveRecord::Migration::CheckPending, ActiveRecord::ConnectionAdapters::ConnectionManagement, ActiveRecord::QueryCache, ActionDispatch::Cookies, ActionDispatch::Session::CookieStore, ActionDispatch::Flash, ActionDispatch::ParamsParser, Rack::Head, Rack::ConditionalGet, Rack::ETag
Application root          /Users/carneiro/Sites/demo
Environment               development
Database adapter          sqlite3
Database schema version   0

demo> rails server
#Output

=> Booting WEBrick
=> Rails 3.2.0 application starting on http://0.0.0.0:3000
=> Call with -d to detach
=> Ctrl-C to shutdown server
[2011-07-23 10:38:18] INFO WEBrick 1.3.1
[2011-07-23 10:38:18] INFO ruby 1.9.3 (2011-10-30) [x86_64-linux] [2011-07-23 10:38:18] INFO WEBrick::HTTPServer#start: pid=6044 port=3000

#Starts HTTP Server on 0.0.0.0:3000

demo> rails generate controller Say hello goodbye
#Output

create app/controllers/say_controller.rb
 route  get "say/goodbye"
 route  get "say/hello"
invoke  erb
￼￼report erratum • discuss
create    app/views/say
create    app/views/say/hello.html.erb
create    app/views/say/goodbye.html.erb
invoke  test_unit
create    test/functional/say_controller_test.rb
invoke  helper
create    app/helpers/say_helper.rb
invoke    test_unit
create      test/unit/helpers/say_helper_test.rb
invoke  assets
invoke    coffee
create      app/assets/javascripts/say.js.coffee
invoke    scss
create      app/assets/stylesheets/say.css.scss

#Controllers go into app/controllers, and Views go into subdirectories of app/views.


demo> cat app/controllers/say_controller.rb
#Output

class SayController < ApplicationController
  def hello
  end

  def goodbye
  end
end

demo> curl -v http://localhost:3000/say/hello 
demo> curl -v http://localhost:3000/say/goodbye


demo> cat app/views/say/hello.html.erb

<h1> Hello from Rails ! </h1>



#Generating dynamic content

demo> cat app/views/say/hello.html.erb
#Output
<h1> Hello from Rails ! </h1>
<p>
    It is now <%= Time.now %>

</p>


#Generating time from controller instead of view

demo> cat  app/controllers/say_controller.rb
#Output
	
class SayController < ApplicationController
  def hello
      @time = Time.now		#Instance Variable
  end

  def goodbye
  end
end

demo> cat app/views/say/hello.html.erb
#Output

<h1> Hello from Rails ! </h1>
<p>
    It is now <%= @time  %>

</p>

# By setting the time to display in the controller, we make our application more flexible
# We can change the time zone in the controller without having to update any view that uses that time object.
# The time is data, and it should be supplied to the view by the controller.
#Linking Pages Together

demo » cat app/views/say/goodbye.html.erb
#Output
                                                                                                                                                                                                 1 ↵
<h1> GoodBye !! </h1>
<p> It was nice having you here </p>
<p> Say <a href="/say/hello">Hello </a>! </p>

demo » cat app/views/say/hello.html.erb
#Output

<h1> Hello from Rails ! </h1>
<p> It is now <%= @time  %> </p>
<p> Time to say <a href="/say/goodbye">GoodBye</a>!  </p>



#Rails way  of linking pages

demo » cat app/views/say/hello.html.erb
#Output

<h1> Hello from Rails ! </h1>
<p> It is now <%= @time  %> </p>
<p> Time to say
    <%= link_to "Goodbye", say_goodbye_path %>!
</p>

demo » cat  app/views/say/goodbye.html.erb
#Output

<h1> GoodBye !! </h1>
<p> It was nice having you here </p>
<p>
    Say <%=	link_to "Hello", say_hello_path %> again.
</p>


#The say_goodbye_path is a precomputed value by link_to() that Rails makes available to application views. 
#It evaluates to the /say/goodbye path.
